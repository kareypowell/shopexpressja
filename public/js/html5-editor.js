/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/html5-editor.js":
/*!**************************************!*\
  !*** ./resources/js/html5-editor.js ***!
  \**************************************/
/***/ (() => {

eval("function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n/**\n * HTML5 Editor with Placeholder Support\n * Replacement for TinyMCE with similar functionality\n */\nvar HTML5Editor = /*#__PURE__*/function () {\n  function HTML5Editor(selector) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    _classCallCheck(this, HTML5Editor);\n    this.selector = selector;\n    this.element = document.querySelector(selector);\n    this.options = _objectSpread({\n      height: 400,\n      placeholders: [],\n      onChange: null,\n      onKeyup: null,\n      onInit: null\n    }, options);\n    this.editor = null;\n    this.toolbar = null;\n    this.placeholderDropdown = null;\n    this.init();\n  }\n  return _createClass(HTML5Editor, [{\n    key: \"init\",\n    value: function init() {\n      if (!this.element) {\n        console.error('HTML5Editor: Element not found for selector:', this.selector);\n        return;\n      }\n      this.createEditor();\n      this.createToolbar();\n      this.setupEventListeners();\n      if (this.options.onInit) {\n        this.options.onInit(this);\n      }\n    }\n  }, {\n    key: \"createEditor\",\n    value: function createEditor() {\n      // Hide the original textarea\n      this.element.style.display = 'none';\n\n      // Create editor container\n      var container = document.createElement('div');\n      container.className = 'html5-editor-container border border-gray-300 rounded-md overflow-hidden';\n\n      // Create toolbar container\n      this.toolbar = document.createElement('div');\n      this.toolbar.className = 'html5-editor-toolbar bg-gray-50 border-b border-gray-300 p-2 flex flex-wrap gap-1';\n\n      // Create editor\n      this.editor = document.createElement('div');\n      this.editor.className = 'html5-editor-content p-3 focus:outline-none';\n      this.editor.contentEditable = true;\n      this.editor.style.minHeight = this.options.height + 'px';\n      this.editor.style.maxHeight = '600px';\n      this.editor.style.overflowY = 'auto';\n\n      // Set initial content\n      this.editor.innerHTML = this.element.value || '';\n\n      // Append elements\n      container.appendChild(this.toolbar);\n      container.appendChild(this.editor);\n      this.element.parentNode.insertBefore(container, this.element.nextSibling);\n    }\n  }, {\n    key: \"createToolbar\",\n    value: function createToolbar() {\n      var _this = this;\n      var buttons = [{\n        command: 'bold',\n        icon: 'B',\n        title: 'Bold',\n        className: 'font-bold'\n      }, {\n        command: 'italic',\n        icon: 'I',\n        title: 'Italic',\n        className: 'italic'\n      }, {\n        command: 'underline',\n        icon: 'U',\n        title: 'Underline',\n        className: 'underline'\n      }, {\n        type: 'separator'\n      }, {\n        command: 'justifyLeft',\n        icon: '⬅',\n        title: 'Align Left'\n      }, {\n        command: 'justifyCenter',\n        icon: '⬌',\n        title: 'Align Center'\n      }, {\n        command: 'justifyRight',\n        icon: '➡',\n        title: 'Align Right'\n      }, {\n        type: 'separator'\n      }, {\n        command: 'insertUnorderedList',\n        icon: '• List',\n        title: 'Bullet List'\n      }, {\n        command: 'insertOrderedList',\n        icon: '1. List',\n        title: 'Numbered List'\n      }, {\n        type: 'separator'\n      }, {\n        command: 'removeFormat',\n        icon: '✗',\n        title: 'Remove Formatting'\n      }];\n      buttons.forEach(function (button) {\n        if (button.type === 'separator') {\n          var separator = document.createElement('div');\n          separator.className = 'w-px bg-gray-300 mx-1';\n          _this.toolbar.appendChild(separator);\n        } else {\n          var btn = _this.createToolbarButton(button);\n          _this.toolbar.appendChild(btn);\n        }\n      });\n\n      // Add placeholders dropdown if placeholders are provided\n      if (this.options.placeholders && this.options.placeholders.length > 0) {\n        var separator = document.createElement('div');\n        separator.className = 'w-px bg-gray-300 mx-1';\n        this.toolbar.appendChild(separator);\n        this.createPlaceholderDropdown();\n      }\n    }\n  }, {\n    key: \"createToolbarButton\",\n    value: function createToolbarButton(button) {\n      var _this2 = this;\n      var btn = document.createElement('button');\n      btn.type = 'button';\n      btn.className = \"html5-editor-btn px-2 py-1 text-sm border border-gray-300 rounded hover:bg-gray-100 focus:outline-none focus:ring-1 focus:ring-indigo-500 \".concat(button.className || '');\n      btn.innerHTML = button.icon;\n      btn.title = button.title;\n      btn.addEventListener('click', function (e) {\n        e.preventDefault();\n        _this2.execCommand(button.command);\n      });\n      return btn;\n    }\n  }, {\n    key: \"createPlaceholderDropdown\",\n    value: function createPlaceholderDropdown() {\n      var _this3 = this;\n      var container = document.createElement('div');\n      container.className = 'relative inline-block';\n      var button = document.createElement('button');\n      button.type = 'button';\n      button.className = 'html5-editor-btn px-3 py-1 text-sm border border-gray-300 rounded hover:bg-gray-100 focus:outline-none focus:ring-1 focus:ring-indigo-500 flex items-center gap-1';\n      button.innerHTML = 'Placeholders <span class=\"text-xs\">▼</span>';\n      var dropdown = document.createElement('div');\n      dropdown.className = 'absolute top-full left-0 mt-1 w-64 bg-white border border-gray-300 rounded-md shadow-lg z-50 hidden';\n      dropdown.style.maxHeight = '200px';\n      dropdown.style.overflowY = 'auto';\n      this.options.placeholders.forEach(function (placeholder) {\n        var item = document.createElement('button');\n        item.type = 'button';\n        item.className = 'w-full text-left px-3 py-2 text-sm hover:bg-gray-100 border-b border-gray-100 last:border-b-0';\n        item.innerHTML = \"\\n                <div class=\\\"font-medium text-gray-900\\\">\".concat(placeholder.text, \"</div>\\n                <div class=\\\"text-xs text-gray-500\\\">\").concat(placeholder.description || '', \"</div>\\n            \");\n        item.addEventListener('click', function (e) {\n          e.preventDefault();\n          _this3.insertPlaceholder(placeholder.value);\n          dropdown.classList.add('hidden');\n        });\n        dropdown.appendChild(item);\n      });\n      button.addEventListener('click', function (e) {\n        e.preventDefault();\n        dropdown.classList.toggle('hidden');\n      });\n\n      // Close dropdown when clicking outside\n      document.addEventListener('click', function (e) {\n        if (!container.contains(e.target)) {\n          dropdown.classList.add('hidden');\n        }\n      });\n      container.appendChild(button);\n      container.appendChild(dropdown);\n      this.toolbar.appendChild(container);\n      this.placeholderDropdown = dropdown;\n    }\n  }, {\n    key: \"execCommand\",\n    value: function execCommand(command) {\n      var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      this.editor.focus();\n      document.execCommand(command, false, value);\n      this.updateTextarea();\n    }\n  }, {\n    key: \"insertPlaceholder\",\n    value: function insertPlaceholder(placeholder) {\n      this.editor.focus();\n      var selection = window.getSelection();\n      var range = selection.getRangeAt(0);\n      var span = document.createElement('span');\n      span.className = 'placeholder bg-blue-100 text-blue-800 px-1 py-0.5 rounded text-sm font-medium';\n      span.textContent = placeholder;\n      span.contentEditable = false;\n      range.deleteContents();\n      range.insertNode(span);\n\n      // Move cursor after the placeholder\n      range.setStartAfter(span);\n      range.setEndAfter(span);\n      selection.removeAllRanges();\n      selection.addRange(range);\n      this.updateTextarea();\n    }\n  }, {\n    key: \"setupEventListeners\",\n    value: function setupEventListeners() {\n      var _this4 = this;\n      // Update textarea on content change\n      this.editor.addEventListener('input', function () {\n        _this4.updateTextarea();\n        if (_this4.options.onChange) {\n          _this4.options.onChange(_this4.getContent());\n        }\n      });\n      this.editor.addEventListener('keyup', function () {\n        _this4.updateTextarea();\n        if (_this4.options.onKeyup) {\n          _this4.options.onKeyup(_this4.getContent());\n        }\n      });\n\n      // Handle @ symbol for placeholder insertion\n      this.editor.addEventListener('keydown', function (e) {\n        if (e.key === '@' && _this4.options.placeholders && _this4.options.placeholders.length > 0) {\n          e.preventDefault();\n          _this4.showPlaceholderSuggestions();\n        }\n      });\n\n      // Prevent line breaks in placeholders\n      this.editor.addEventListener('keydown', function (e) {\n        var selection = window.getSelection();\n        if (selection.rangeCount > 0) {\n          var range = selection.getRangeAt(0);\n          var container = range.commonAncestorContainer;\n          var placeholder = container.nodeType === Node.TEXT_NODE ? container.parentElement : container;\n          if (placeholder && placeholder.classList && placeholder.classList.contains('placeholder')) {\n            if (e.key === 'Enter' || e.key === 'Backspace' || e.key === 'Delete') {\n              e.preventDefault();\n              if (e.key === 'Backspace' || e.key === 'Delete') {\n                placeholder.remove();\n                _this4.updateTextarea();\n              }\n            }\n          }\n        }\n      });\n    }\n  }, {\n    key: \"showPlaceholderSuggestions\",\n    value: function showPlaceholderSuggestions() {\n      if (this.placeholderDropdown) {\n        this.placeholderDropdown.classList.remove('hidden');\n      }\n    }\n  }, {\n    key: \"updateTextarea\",\n    value: function updateTextarea() {\n      this.element.value = this.getContent();\n\n      // Trigger change event for form validation\n      var event = new Event('change', {\n        bubbles: true\n      });\n      this.element.dispatchEvent(event);\n    }\n  }, {\n    key: \"getContent\",\n    value: function getContent() {\n      return this.editor.innerHTML;\n    }\n  }, {\n    key: \"setContent\",\n    value: function setContent(content) {\n      this.editor.innerHTML = content || '';\n      this.updateTextarea();\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      if (this.editor && this.editor.parentNode) {\n        var container = this.editor.parentNode;\n        container.remove();\n        this.element.style.display = '';\n      }\n    }\n  }]);\n}(); // Export for use in other files\nwindow.HTML5Editor = HTML5Editor;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/html5-editor.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/html5-editor.js"]();
/******/ 	
/******/ })()
;